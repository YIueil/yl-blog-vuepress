import{_ as a,o as n,c as s,d as e}from"./app-4023f1b2.js";const i={},l=e(`<h1 id="pnpm-workspace管理大型项目" tabindex="-1"><a class="header-anchor" href="#pnpm-workspace管理大型项目" aria-hidden="true">#</a> PNPM Workspace管理大型项目</h1><p>monorepo 仓库管理方式 其优势</p><ul><li>便于多个项目互相依赖本地调试</li><li>便于共享知识库</li><li>减少管理成本</li></ul><p>其劣势</p><ul><li>难以进行权限管理</li><li>版本管理困难</li><li>代码质量难以控制</li></ul><p>什么情况下使用？</p><ul><li>子项目直接互相依赖</li><li>需要使用测试项目测试项目组件</li></ul><p>最佳实践</p><ul><li>link对象设置为私有</li><li>依赖管理放到workspace-root中管理</li><li>禁止workspace独立新增依赖</li><li>根目录中添加eslint、prettier配置，子项目集成root配置</li></ul><h2 id="_1-入门项目" tabindex="-1"><a class="header-anchor" href="#_1-入门项目" aria-hidden="true">#</a> 1 入门项目</h2><h3 id="_1-1-创建出父项目" tabindex="-1"><a class="header-anchor" href="#_1-1-创建出父项目" aria-hidden="true">#</a> 1.1 创建出父项目</h3><p><code>pnpm create vue@latest</code></p><h3 id="_1-2-创建pnpm-workspace-yaml" tabindex="-1"><a class="header-anchor" href="#_1-2-创建pnpm-workspace-yaml" aria-hidden="true">#</a> 1.2 创建pnpm-workspace.yaml</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">packages</span><span class="token punctuation">:</span>  
  <span class="token punctuation">-</span> <span class="token string">&#39;packages/*&#39;</span>  
  <span class="token punctuation">-</span> <span class="token string">&#39;project/*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-创建组件模块" tabindex="-1"><a class="header-anchor" href="#_1-3-创建组件模块" aria-hidden="true">#</a> 1.3 创建组件模块</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> packages
<span class="token variable"><span class="token variable">\`</span><span class="token function">pnpm</span> create vue@latest<span class="token variable">\`</span></span>
<span class="token comment"># 项目名</span>
yl-button-component
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-创建测试模块" tabindex="-1"><a class="header-anchor" href="#_1-4-创建测试模块" aria-hidden="true">#</a> 1.4 创建测试模块</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> project
<span class="token variable"><span class="token variable">\`</span><span class="token function">pnpm</span> create vue@latest<span class="token variable">\`</span></span>
<span class="token comment"># 项目名</span>
yl-test-vue
<span class="token comment"># 测试项目可以依赖yl-button-component</span>
<span class="token string">&quot;dependencies&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>  
  <span class="token string">&quot;yl-button-component&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;workspace:*&quot;</span>,  
<span class="token punctuation">}</span>
<span class="token comment"># 安装依赖</span>
<span class="token function">pnpm</span> i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试模块中就可以调用<code>yl-button-component</code>模块的东西了。</p>`,19),c=[l];function t(p,o){return n(),s("div",null,c)}const r=a(i,[["render",t],["__file","PNPM Workspaceguanlidaxingxiangmu.html.vue"]]);export{r as default};
