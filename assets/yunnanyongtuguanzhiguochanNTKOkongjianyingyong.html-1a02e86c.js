import{_ as n,o as s,c as a,d as t}from"./app-4023f1b2.js";const p={},o=t(`<h1 id="云南用途管制国产ntko控件应用" tabindex="-1"><a class="header-anchor" href="#云南用途管制国产ntko控件应用" aria-hidden="true">#</a> 云南用途管制国产NTKO控件应用</h1><blockquote><p>项目架构: Dap4.3产品 + Vue2</p></blockquote><p>下载地址：http://124.220.234.24/down.html 网盘：链接：https://pan.baidu.com/s/1NKpmdTJ2NOWw-26iOm4KZg 提取码：o3i7 解压密码：dist</p><h2 id="_1-前端部分改造" tabindex="-1"><a class="header-anchor" href="#_1-前端部分改造" aria-hidden="true">#</a> 1 前端部分改造</h2><h3 id="_1-1-引入ntkobackground-min-jsntko的核心方法依赖库。" tabindex="-1"><a class="header-anchor" href="#_1-1-引入ntkobackground-min-jsntko的核心方法依赖库。" aria-hidden="true">#</a> 1.1 引入<code>ntkobackground.min.js</code>NTKO的核心方法依赖库。</h3><p><img src="https://s2.loli.net/2024/10/15/lBpndCJohbeHWUx.png" alt="lBpndCJohbeHWUx.png"></p><h2 id="_2-后端部分改造" tabindex="-1"><a class="header-anchor" href="#_2-后端部分改造" aria-hidden="true">#</a> 2 后端部分改造</h2><h3 id="_2-1-webapps下的web-inf中引入ntko主体内容" tabindex="-1"><a class="header-anchor" href="#_2-1-webapps下的web-inf中引入ntko主体内容" aria-hidden="true">#</a> 2.1 Webapps下的WEB-INF中引入NTKO主体内容</h3><p><img src="https://s2.loli.net/2024/10/15/DaK7J1pQS8kTAcy.png" alt="DaK7J1pQS8kTAcy.png"></p><h3 id="_2-2-windows控件插件下载地址" tabindex="-1"><a class="header-anchor" href="#_2-2-windows控件插件下载地址" aria-hidden="true">#</a> 2.2 Windows控件插件下载地址</h3><p><img src="https://s2.loli.net/2024/10/15/TAfwYLpRgGvOnyH.png" alt="TAfwYLpRgGvOnyH.png"></p><h2 id="_3-安装-应用程序和浏览器插件" tabindex="-1"><a class="header-anchor" href="#_3-安装-应用程序和浏览器插件" aria-hidden="true">#</a> 3 安装（应用程序和浏览器插件）</h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h3><p>直接安装exe安装程序，执行后重启再打开浏览器启用NTKO插件。</p><h3 id="其他平台" tabindex="-1"><a class="header-anchor" href="#其他平台" aria-hidden="true">#</a> 其他平台</h3><p>参照应用平台文档进行安装（通过终端命令），插件会在命令执行后携带：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> dpkg <span class="token parameter variable">-i</span> ntko-office_1.1.4+arm64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>不同的平台的命令可能有一些不同，执行命令需要输入账户密码。</p></blockquote><h2 id="_4-代码编写" tabindex="-1"><a class="header-anchor" href="#_4-代码编写" aria-hidden="true">#</a> 4 代码编写</h2><h3 id="_4-1-前端调用请求获取后端word模板" tabindex="-1"><a class="header-anchor" href="#_4-1-前端调用请求获取后端word模板" aria-hidden="true">#</a> 4.1 前端调用请求获取后端Word模板</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">selectNwTemplate</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">const</span> ntkoBrowser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@/api/ntkobackground.min&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ntkoBrowser  
    <span class="token keyword">const</span> ntkoed <span class="token operator">=</span> ntkoBrowser<span class="token punctuation">.</span><span class="token function">ExtensionInstalled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 判断插件是否安装  </span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">+</span> <span class="token string">&#39;officialEditor/officeMaterialEditorForNewVersion.jsp?&#39;</span> <span class="token operator">+</span>  
      <span class="token string">&#39;projectId=&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>params<span class="token punctuation">.</span>projectId <span class="token operator">+</span>  
      <span class="token string">&#39;&amp;materialId=&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">.</span>materialId <span class="token operator">+</span>  
      <span class="token string">&#39;&amp;taskId=&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>query<span class="token punctuation">.</span>taskId <span class="token operator">+</span>  
      <span class="token string">&#39;&amp;userName=&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>loginName <span class="token operator">+</span>  
      <span class="token string">&#39;&amp;fileName=&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">.</span>mbmc <span class="token operator">+</span>  
      <span class="token string">&#39;&amp;save=true&amp;mark=true&amp;marking=true&#39;</span>  
    <span class="token comment">// 安装了插件则打开预览地址</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ntkoed<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      ntkoBrowser<span class="token punctuation">.</span><span class="token function">openWindow</span><span class="token punctuation">(</span><span class="token function">encodeURI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>  
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 否则打开插件下载页</span>
      window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VUE_APP_BASE_URL</span> <span class="token operator">+</span> <span class="token string">&#39;officialEditor/officecontrol/exeindex.html&#39;</span><span class="token punctuation">)</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-后端获取word模板-返回模板访问的url" tabindex="-1"><a class="header-anchor" href="#_4-2-后端获取word模板-返回模板访问的url" aria-hidden="true">#</a> 4.2 后端获取Word模板，返回模板访问的URL</h3><blockquote><p>逻辑是获取到模板文件，生成一个新文件，返回URL。如果已经存在则返回已有的文件。</p></blockquote><p>获取报表URL接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token annotation punctuation">@ResponseBody</span>  
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;预览：获取word报表预览路径&quot;</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">&quot;报表：获取word预览路径&quot;</span><span class="token punctuation">,</span> response <span class="token operator">=</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>  
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;project/material/getWordReportUrlNtko&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWordReportUrl</span><span class="token punctuation">(</span>  
            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;审批事项Id&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;projectId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> projectId<span class="token punctuation">,</span>  
            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;报表版本Id&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;reportRevisionId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> reportRevisionId<span class="token punctuation">,</span>  
            <span class="token annotation punctuation">@ApiParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;任务id&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;taskId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> taskId<span class="token punctuation">,</span>  
            <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>  
            <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>  
        <span class="token class-name">UserDTO</span> user <span class="token operator">=</span> <span class="token function">getUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token class-name">GlobalProperties</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;sitehome.url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> rspMap <span class="token operator">=</span> ynProjectMaterialService<span class="token punctuation">.</span><span class="token function">getReportFile</span><span class="token punctuation">(</span>projectId<span class="token punctuation">,</span> reportRevisionId<span class="token punctuation">,</span> user<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;/officialEditor/index.jsp&quot;</span><span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;?projectId=&quot;</span> <span class="token operator">+</span> projectId<span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;&amp;reportRevisionId=&quot;</span> <span class="token operator">+</span> reportRevisionId<span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;&amp;isWordReport=&quot;</span> <span class="token operator">+</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;&amp;taskId=&quot;</span> <span class="token operator">+</span> taskId<span class="token punctuation">;</span>  
        url <span class="token operator">+=</span> <span class="token string">&quot;&amp;fullPath=&quot;</span> <span class="token operator">+</span> <span class="token class-name">Parse</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>rspMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;filePath&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">//        url += &quot;&amp;fileName=&quot; + Parse.getString(rspMap.get(&quot;fileName&quot;), &quot;&quot;);  </span>
        <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取报表文件具体实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Transactional</span>  
    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getReportFile</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> projectId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> reportRevisionId<span class="token punctuation">,</span> <span class="token class-name">UserDTO</span> userDTO<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isDeleted<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>  
        <span class="token class-name">String</span> fileName <span class="token operator">=</span> projectId <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> reportRevisionId <span class="token operator">+</span> <span class="token string">&quot;.doc&quot;</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> tempPath <span class="token operator">=</span> servletContext<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        tempPath <span class="token operator">=</span> tempPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">&quot;officeFile_&quot;</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> userDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>  
<span class="token comment">//清空用户文件夹下的文件  </span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>userDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userDTO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> isDeleted<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>dist<span class="token punctuation">.</span>bdf<span class="token punctuation">.</span>util<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span>FileUtil</span><span class="token punctuation">.</span><span class="token function">delFolder</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>dist<span class="token punctuation">.</span>bdf<span class="token punctuation">.</span>util<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span>FileUtil</span><span class="token punctuation">.</span><span class="token function">mkDir</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tempPath <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Boolean</span> create <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> realPath <span class="token operator">=</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> <span class="token class-name">SubPath</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>  
        <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token class-name">FileOutputStream</span> sos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            sos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">//如果存在则下载。不存在从模板生成  </span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fileStoreFacade<span class="token punctuation">.</span><span class="token function">isExit</span><span class="token punctuation">(</span>realPath<span class="token punctuation">,</span> <span class="token class-name">MaterialService<span class="token punctuation">.</span>MaterialConfigName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                in <span class="token operator">=</span> reportPubService<span class="token punctuation">.</span><span class="token function">getReportRevisionLayoutStream</span><span class="token punctuation">(</span>reportRevisionId<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token function">printStream</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> sos<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  
                <span class="token keyword">this</span><span class="token punctuation">.</span>fileStoreFacade<span class="token punctuation">.</span><span class="token function">downLoadFile</span><span class="token punctuation">(</span>realPath<span class="token punctuation">,</span> sos<span class="token punctuation">,</span> <span class="token class-name">MaterialService<span class="token punctuation">.</span>MaterialConfigName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                create <span class="token operator">=</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token class-name">Loggers</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>  
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>sos<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        projectReportService<span class="token punctuation">.</span><span class="token function">saveAsposeWord</span><span class="token punctuation">(</span>tempPath <span class="token operator">+</span> fileName<span class="token punctuation">,</span> projectId<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> userDTO<span class="token punctuation">,</span> reportRevisionId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">String</span> filePath <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">GlobalProperties</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;filePath.encode.enable&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token keyword">try</span> <span class="token punctuation">{</span>  
                filePath <span class="token operator">=</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token class-name">GlobalProperties</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;ibm.bpm.basic.encoding&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token class-name">Loggers</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span>  
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> rspMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">ReportDTO</span> reportDTO <span class="token operator">=</span> projectReportService<span class="token punctuation">.</span><span class="token function">getReportDTOByByRevisionId</span><span class="token punctuation">(</span>reportRevisionId<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        rspMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fileName&quot;</span><span class="token punctuation">,</span> reportDTO<span class="token punctuation">.</span><span class="token function">getReportname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        rspMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;filePath&quot;</span><span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        rspMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;realPath&quot;</span><span class="token punctuation">,</span> realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        rspMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fileSize&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> rspMap<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-ntko版本更新" tabindex="-1"><a class="header-anchor" href="#_5-ntko版本更新" aria-hidden="true">#</a> 5 NTKO版本更新</h2><h3 id="_5-1-拿到最新的更新授权文件ntkocfgfile-dat-替换位于服务器的officialeditor-officecontrol下的文件。" tabindex="-1"><a class="header-anchor" href="#_5-1-拿到最新的更新授权文件ntkocfgfile-dat-替换位于服务器的officialeditor-officecontrol下的文件。" aria-hidden="true">#</a> 5.1 拿到最新的更新授权文件ntkocfgfile.dat, 替换位于服务器的officialEditor/officecontrol下的文件。</h3><p><img src="https://s2.loli.net/2024/10/15/wULcSstqO79FkYy.png" alt="wULcSstqO79FkYy.png"></p><h3 id="_5-2-后端修改officialeditor根据授权id或者pluginversion判断当前的客户端控件是否是最新的。如果是老的则更新授权文件" tabindex="-1"><a class="header-anchor" href="#_5-2-后端修改officialeditor根据授权id或者pluginversion判断当前的客户端控件是否是最新的。如果是老的则更新授权文件" aria-hidden="true">#</a> 5.2 后端修改officialEditor根据授权ID或者pluginVersion判断当前的客户端控件是否是最新的。如果是老的则更新授权文件</h3><p><img src="https://s2.loli.net/2024/10/15/rxNSgD8FlJARmM9.png" alt="rxNSgD8FlJARmM9.png"></p><blockquote><p>更新常见常见问题： 客户端因为服务端代码有问题，导致错误下载ntkocfgfile.dat授权文件，需要重新卸载后安装，或者将新版本的包解压出来，拿到内部的ntkocfgfile.dat并进行替换。</p></blockquote>`,33),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","yunnanyongtuguanzhiguochanNTKOkongjianyingyong.html.vue"]]);export{r as default};
