import{_ as n,o as s,c as a,d as t}from"./app-4023f1b2.js";const p={},e=t(`<h1 id="dap4-3业务应用获取材料报表更新dap表问题" tabindex="-1"><a class="header-anchor" href="#dap4-3业务应用获取材料报表更新dap表问题" aria-hidden="true">#</a> DAP4.3业务应用获取材料报表更新DAP表问题</h1><h3 id="问题分析" tabindex="-1"><a class="header-anchor" href="#问题分析" aria-hidden="true">#</a> 问题分析</h3><p>监控系统执行中的 SQL 时，发现存在业务系统更新模型表的数据。并发量高时，会因为模型表更新而导致材料和报表的查询遇到锁表锁行的情况，反应出来的情况就是材料加载缓慢。 <img src="https://s2.loli.net/2024/11/27/FcfgYRQpyZ2N96I.png" alt="FcfgYRQpyZ2N96I.png"></p><h3 id="问题原因" tabindex="-1"><a class="header-anchor" href="#问题原因" aria-hidden="true">#</a> 问题原因</h3><p>跟踪产品接口<code>pcc/approve/v1/project/{projectId}/projectResourceList</code>中的一段代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>  
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span> <span class="token function">listActivityBusinessMaterial</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> businessActivityId<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessActivityMaterial</span><span class="token punctuation">&gt;</span></span> bamList <span class="token operator">=</span> <span class="token function">listBusinessActivityMaterial</span><span class="token punctuation">(</span>businessActivityId<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> businessMaterialIdList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">BusinessActivityMaterial</span><span class="token punctuation">&gt;</span></span> bamMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">BusinessActivityMaterial</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bamList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> bamList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BusinessActivityMaterial</span> bam <span class="token operator">:</span> bamList<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        businessMaterialIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bam<span class="token punctuation">.</span><span class="token function">getBusinessMaterialId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        bamMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>bam<span class="token punctuation">.</span><span class="token function">getBusinessMaterialId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bam<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>businessMaterialIdList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span> bmList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> baseDao<span class="token punctuation">.</span><span class="token function">criteria</span><span class="token punctuation">(</span><span class="token class-name">BusinessMaterialEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>  
            <span class="token class-name">Restrictions</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> businessMaterialIdList<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Order</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token string">&quot;sortNo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bmList <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> bmList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">BusinessMaterial</span><span class="token punctuation">&gt;</span></span> bmMap <span class="token operator">=</span> <span class="token class-name">Parse</span><span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>  
            <span class="token class-name">BusinessMaterial</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> bmList<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> businessMaterialId <span class="token operator">:</span> businessMaterialIdList<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>bmMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token comment">// 用环节材料的顺序替换材料本身的排序  </span>
            <span class="token class-name">BusinessMaterial</span> bm <span class="token operator">=</span> bmMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token comment">// 问题代码</span>
            bm<span class="token punctuation">.</span><span class="token function">setSortNo</span><span class="token punctuation">(</span>bamMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSortNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bm<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码是获取业务材料的代码，其中获取小业务材料的<code>entity</code>后，直接在entity上进行了sortno的修改，最后由hibernate检测到实体变更，于事务提交后进行了持久化。从代码中能够找到：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> ynytgz_dap<span class="token punctuation">.</span>DAP_BUSINESSMATERIAL <span class="token keyword">set</span> ALIAS<span class="token operator">=</span>$<span class="token number">1</span><span class="token punctuation">,</span> FK_BUSINESS_ID<span class="token operator">=</span>$<span class="token number">2</span><span class="token punctuation">,</span> CATEGORYNAME<span class="token operator">=</span>$<span class="token number">3</span><span class="token punctuation">,</span> CREATEDTIME<span class="token operator">=</span>$<span class="token number">4</span><span class="token punctuation">,</span> CREATEDUSERID<span class="token operator">=</span>$<span class="token number">5</span><span class="token punctuation">,</span> <span class="token keyword">ENABLE</span><span class="token operator">=</span>$<span class="token number">6</span><span class="token punctuation">,</span> FILTER<span class="token operator">=</span>$<span class="token number">7</span><span class="token punctuation">,</span> INITIALIZE<span class="token operator">=</span>$<span class="token number">8</span><span class="token punctuation">,</span> FK_MATERIALCATEGORY_ID<span class="token operator">=</span>$<span class="token number">9</span><span class="token punctuation">,</span> PROJECTTYPE<span class="token operator">=</span>$<span class="token number">10</span><span class="token punctuation">,</span> REMARK<span class="token operator">=</span>$<span class="token number">11</span><span class="token punctuation">,</span> SIGN<span class="token operator">=</span>$<span class="token number">12</span><span class="token punctuation">,</span> SORTNO<span class="token operator">=</span>$<span class="token number">13</span> <span class="token keyword">where</span> ID<span class="token operator">=</span>$<span class="token number">14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="问题处理" tabindex="-1"><a class="header-anchor" href="#问题处理" aria-hidden="true">#</a> 问题处理</h3><p>要避免这个问题，就是要避免<code>entity</code>的持久化，比较简单的办法就是使用DTO对象，对DTO对象进行变更操作，而不是直接对<code>entity</code>的操作，从而避免<code>entity</code>的持久化。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>bmMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">//用环节材料的顺序替换材料本身的排序  </span>
    <span class="token class-name">BusinessMaterial</span> bm <span class="token operator">=</span> bmMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token class-name">BusinessMaterialDTO</span> businessMaterialDTO <span class="token operator">=</span> <span class="token class-name">BusinessDTOConverter</span><span class="token punctuation">.</span><span class="token function">toDTO</span><span class="token punctuation">(</span>bm<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token comment">// 使用数据传输对象, 避免持久化  </span>
    businessMaterialDTO<span class="token punctuation">.</span><span class="token function">setSortNo</span><span class="token punctuation">(</span>bamMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>businessMaterialId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSortNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>businessMaterialDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","DAP4.3yewuyingyonghuoqucailiaobaobiaogengxinDAPbiaowenti.html.vue"]]);export{k as default};
