import{_ as e,o as a,c as r,d as i}from"./app-4023f1b2.js";const t={},h=i('<h1 id="建造者模式-builder-pattern" tabindex="-1"><a class="header-anchor" href="#建造者模式-builder-pattern" aria-hidden="true">#</a> 建造者模式 (builder pattern)</h1><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><blockquote><p>肯德基提供的各种套餐，其实就是由主食：汉堡 (鸡肉汉堡，牛肉汉堡)、副食 (薯条，鸡肉卷)、饮料 (橙汁、可乐) 组成的。</p></blockquote><h2 id="设计思想" tabindex="-1"><a class="header-anchor" href="#设计思想" aria-hidden="true">#</a> 设计思想</h2><blockquote><p>一步一步委托简单的构建工厂完成复杂对象的创建。</p></blockquote><h2 id="在-jdk-和-spring-中的应用案例" tabindex="-1"><a class="header-anchor" href="#在-jdk-和-spring-中的应用案例" aria-hidden="true">#</a> 在 JDK 和 Spring 中的应用案例</h2><blockquote><p>JAVA 中的 StringBuilder、URLBuilder、JAVA Mail</p></blockquote><h2 id="使用总结" tabindex="-1"><a class="header-anchor" href="#使用总结" aria-hidden="true">#</a> 使用总结</h2><p>优点:</p><ol><li>调用方能够更好的控制构建过程，并且隐藏了构建细节。</li></ol><p>缺点:</p><ol><li>创建了较多类和对象。</li><li>如果产品的属性和构建过程不复杂，会显得代码冗余。</li></ol><h2 id="uml-图" tabindex="-1"><a class="header-anchor" href="#uml-图" aria-hidden="true">#</a> UML 图</h2><p><img src="https://s2.loli.net/2024/05/16/E6awD12qt9L7mKl.png" alt="E6awD12qt9L7mKl.png#50%"></p>',14),d=[h];function l(n,o){return a(),r("div",null,d)}const s=e(t,[["render",l],["__file","jianzaozhemoshi.html.vue"]]);export{s as default};
